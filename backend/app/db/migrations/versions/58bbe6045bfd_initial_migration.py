"""Initial migration

Revision ID: 58bbe6045bfd
Revises: 8657d08a0169
Create Date: 2025-03-12 00:31:20.944415

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '58bbe6045bfd'
down_revision: Union[str, None] = '8657d08a0169'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First drop the default
    op.execute("ALTER TABLE users ALTER COLUMN role DROP DEFAULT")
    
    # Create and convert to enum
    userrole = postgresql.ENUM('ADMIN', 'USER', name='userrole')
    userrole.create(op.get_bind())
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE userrole USING CASE WHEN role = 'user' THEN 'USER'::userrole WHEN role = 'admin' THEN 'ADMIN'::userrole ELSE 'USER'::userrole END")
    
    # Set the new default
    op.execute("ALTER TABLE users ALTER COLUMN role SET DEFAULT 'USER'::userrole")
    
    op.drop_constraint('users_email_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    
    # Drop the default
    op.execute("ALTER TABLE users ALTER COLUMN role DROP DEFAULT")
    
    # Convert back to varchar
    op.execute("ALTER TABLE users ALTER COLUMN role TYPE VARCHAR(50) USING role::text")
    
    # Set the old default
    op.execute("ALTER TABLE users ALTER COLUMN role SET DEFAULT 'user'")
    
    # Drop the enum type
    userrole = postgresql.ENUM('ADMIN', 'USER', name='userrole')
    userrole.drop(op.get_bind())
    # ### end Alembic commands ###
